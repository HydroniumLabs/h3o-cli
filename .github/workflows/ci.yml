name: CI
on: [pull_request, push]
jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Check compilation errors
        uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting errors
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Check lint errors
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Check documentation errors
        env:
          RUSTDOCFLAGS: -D warnings
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --document-private-items --all-features --examples

  test:
    name: Test
    env:
      PROJECT_NAME: "h3o-cli"
      RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off"
      CARGO_INCREMENTAL: 0
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo2junit
        uses: actions-rs/install@v0.1
        with:
          crate: cargo2junit
          version: 0.1.12
          use-tool-cache: true
      - name: Install grcov
        uses: actions-rs/install@v0.1
        with:
          crate: grcov
          version: 0.8.13
          use-tool-cache: true
      - name: Install rust-covfix
        uses: actions-rs/install@v0.1
        with:
          crate: rust-covfix
          version: 0.2.1
          use-tool-cache: true
      - name: Generate test result and coverage report
        run: |
          cargo test -- -Z unstable-options --format json --report-time | cargo2junit > results.xml;
          zip -0 cov.zip $(find . -name "$PROJECT_NAME*.gc*" -print);
          grcov cov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" -o lcov.info;
          rust-covfix -o lcov-fixed.info lcov.info

  publish-dry-run:
    name: Publish dry run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run
